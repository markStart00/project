docker image build -t questions-app-image .
delete the database not the container

docker stop questions
docker rm questions
docker run --name questions-db -p 5432:5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=password -d postgres
docker run --name answers-db -p 3306:3306 -e MYSQL_ROOT_PASSWORD=password -d mysql

docker exec -it questions-db /bin/bash
psql -U postgres
CREATE DATABASE questions;

docker exec -it answers-db /bin/bash
mysql -p
CREATE DATABASE answers;

docker image build -t answers-app-image .
###    docker run --network="host" --name answers-app -p 8081:8081 -d answers-app-image
docker run --network="host" --name answers-app -d answers-app-image


docker image build -t questions-app-image .
docker image build -t markstart00/questions-app-aws:latest .
docker run --network="host" --name questions-app -d questions-app-image

docker logs answers-app
docker logs questions-app


http localhost:8080/api/v1/questions
ask question									echo '{ "text": "how can i ..." }' | http POST localhost:8080/api/v1/questions/post
upvote question								echo '{ "questionId":"1" }' | http PUT localhost:8080/api/v1/questions/upvote

http localhost:8081/api/v1/answers
post answer									echo '{ "text": "text", "questionId":"3" }' | http POST localhost:8081/api/v1/answers/post 
request answers for q				echo '{ "questionId":"1" }' | http get localhost:8081/api/v1/answers/requestAnswers
upvote answer								echo '{ "answerId": "1" }' | http PUT localhost:8081/api/v1/answers/upvote

-- mvn ---------------------------------------

mvn clean
mvn package

-- react -------------------------------------

yarn build
serve -s build 			serve production ./build/static 		(react just makes static html,css,js)  

docker image build -t react-app-image .
docker run --network="host" --name react-app -d react-app-image

-- docker aws ---------------------------------

docker tag react-app-image:latest markstart00/react-app-image
docker tag questions-app-image:latest markstart00/questions-app-image
docker tag answers-db-image:latest markstart00/answers-app-image

docker login -u markstart00

docker push markstart00/react-app-image:latest
docker push markstart00/questions-app-image:latest
docker push markstart00/answers-app-image:latest

docker run --network="host" --name react-app -d markstart00/react-app-aws:latest
docker run --network="host" --name answers-app -d markstart00/answers-app-aws:latest
docker run --network="host" --name questions-app -d markstart00/questions-app-aws:latest

docker run --name questions-db -p 5432:5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=password -d postgres
docker run --name answers-db -p 3306:3306 -e MYSQL_ROOT_PASSWORD=password -d mysql

-- curl --------------------------------------

curl 127.31.8.103/16:8080/api/v1/questions



-- aws ecr -----------------------------------

aws ecr create-repository --repository-name test --image-scanning-configuration scanOnPush=true --region eu-west-2
docker tag   markstart00/react-app-aws:latest   230868066496.dkr.ecr.eu-west-2.amazonaws.com/react-app-aws:latest
docker push 230868066496.dkr.ecr.eu-west-2.amazonaws.com/react-app-aws:latest







